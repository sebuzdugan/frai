import path from 'path';

export function toJson(report) {
  return JSON.stringify(report, null, 2);
}

export function toMarkdown(report) {
  const lines = [];
  lines.push('# FRAI Evaluation Report');
  lines.push('');
  lines.push(`- **Generated At:** ${report.metadata.generatedAt}`);
  lines.push(`- **Outputs File:** ${report.metadata.outputsPath}`);
  if (report.metadata.referencesPath) {
    lines.push(`- **References File:** ${report.metadata.referencesPath}`);
  }
  lines.push(`- **Total Samples:** ${report.metadata.totalSamples}`);
  lines.push('');
  lines.push('## Metrics');
  lines.push('');
  report.metrics.forEach((metric) => {
    lines.push(`### ${metric.label}`);
    lines.push('');
    lines.push(`- **Score:** ${metric.score ?? 'n/a'}`);
    if (typeof metric.total === 'number') {
      lines.push(`- **Total Samples:** ${metric.total}`);
    }
    if (typeof metric.matches === 'number') {
      lines.push(`- **Matches:** ${metric.matches}`);
    }
    if (typeof metric.flagged === 'number') {
      lines.push(`- **Flagged Samples:** ${metric.flagged}`);
    }
    if (typeof metric.averageDelta === 'number') {
      lines.push(`- **Average Delta:** ${metric.averageDelta}`);
    }
    lines.push('');
  });
  lines.push('---');
  lines.push('*Generated by FRAI Evaluation Harness*');
  return lines.join('\n');
}

export function resolveReportPath(reportPath, format = 'json') {
  if (!reportPath) {
    return format === 'markdown' ? path.resolve('frai-eval-report.md') : path.resolve('frai-eval-report.json');
  }
  const ext = path.extname(reportPath);
  if (!ext) {
    return format === 'markdown' ? `${reportPath}.md` : `${reportPath}.json`;
  }
  return reportPath;
}

export default {
  toJson,
  toMarkdown,
  resolveReportPath
};
